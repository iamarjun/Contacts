// Generated by Dagger (https://google.github.io/dagger).
package com.example.contacts.dagger.module;

import com.example.contacts.network.SMS;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

public final class NetworkModule_ProvideRetrofitSMS$app_debugFactory implements Factory<SMS> {
  private final NetworkModule module;

  private final Provider<OkHttpClient> okHttpClientProvider;

  public NetworkModule_ProvideRetrofitSMS$app_debugFactory(
      NetworkModule module, Provider<OkHttpClient> okHttpClientProvider) {
    this.module = module;
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public SMS get() {
    return provideInstance(module, okHttpClientProvider);
  }

  public static SMS provideInstance(
      NetworkModule module, Provider<OkHttpClient> okHttpClientProvider) {
    return proxyProvideRetrofitSMS$app_debug(module, okHttpClientProvider.get());
  }

  public static NetworkModule_ProvideRetrofitSMS$app_debugFactory create(
      NetworkModule module, Provider<OkHttpClient> okHttpClientProvider) {
    return new NetworkModule_ProvideRetrofitSMS$app_debugFactory(module, okHttpClientProvider);
  }

  public static SMS proxyProvideRetrofitSMS$app_debug(
      NetworkModule instance, OkHttpClient okHttpClient) {
    return Preconditions.checkNotNull(
        instance.provideRetrofitSMS$app_debug(okHttpClient),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
